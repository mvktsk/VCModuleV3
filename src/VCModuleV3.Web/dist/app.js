!function(e){var o={};function t(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=o,t.d=function(e,o,r){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)t.d(r,n,function(o){return e[o]}.bind(null,n));return r},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o,t){t(1),t(2),e.exports=t(3)},function(e,o){void 0!==AppDependencies&&AppDependencies.push("VCModuleV3"),angular.module("VCModuleV3",[]).config(["$stateProvider",function(e){e.state("workspace.VCModuleV3",{url:"/VCModuleV3",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["platformWebApp.bladeNavigationService",function(e){e.showBlade({id:"reviewsList",controller:"VCModuleV3.helloWorldController",template:"Modules/$(VCModuleV3)/Scripts/blades/hello-world.tpl.html",isClosingDisabled:!0})}]})}]).run(["platformWebApp.mainMenuService","$state",function(e,o){var t={path:"browse/VCModuleV3",icon:"fa fa-comments",title:"VCModuleV3 module",priority:100,action:function(){o.go("workspace.VCModuleV3")},permission:"VCModuleV3:read"};e.addMenuItem(t)}])},function(e,o){angular.module("VCModuleV3").controller("VCModuleV3.helloWorldController",["$scope","VCModuleV3.api",function(e,o){var t=e.blade;t.title="VCModuleV3.blades.hello-world.title",t.headIcon="fa-comments",t.refresh=function(){o.get((function(e){t.data=e.result,t.isLoading=!1}))},t.refresh()}])},function(e,o){angular.module("VCModuleV3").factory("VCModuleV3.api",["$resource",function(e){return e("api/VCModuleV3")}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,